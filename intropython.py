# -*- coding: utf-8 -*-
"""IntroPython.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Mjo9SPBpBR5aTWIVy8c_RS2wN2RYgbBc

# **Primera Clase Programacion 3**

## Logica Programacion Phyton

## Primera Funcion
"""

def SayHi():
  name = input("Ingresa tu nombre: ")
  print(f"Hola {name.upper()}")

SayHi()

print ("primera clase")

name="Alex"
print (name)

age=19
age

print(f"El nombre es {name} y tiene {age} años")

age=20

print(f"El nombre es {name} y tiene {age} años")

"""## Parametros"""

def SayHiWithParameters(aname):
  print(f"Hi {aname}")

name="Juan"

SayHiWithParameters(name)

"""## Condicionales"""

age=20

def VericateIfCanDrive(an_age):
  if an_age>=18:
    print(f"La persona de {an_age} años puede conducir")
  else:
    print(f"La persona de {an_age} años no puede conducir")
VericateIfCanDrive(age)

def VericateIfCanDriveWithoutParameters():
  is_int=True
  while is_int:
    an_age=input("Ingresa tu edad: ")
    if an_age.isdigit():
      is_int=False
  an_age=int(an_age)

  if an_age>18:
    print("Puede conducir")
  else:
    print("No puede conducir")
VericateIfCanDriveWithoutParameters()

type(age)

"""##Listas"""

ages = [12,14,15,17]
type(ages)

ages = [1,2,3,4]
#       0 1 2 3
#       0 -3 -2 1
ages[2]

ages[0:3]

ages[1:]

"""## Bucles y Lazos"""

ages=[18,22,15,50]

for age in ages:
  VericateIfCanDrive(age)

def VerificateIfCanDriveWithBucle(ages):
  for age in ages:
    if age>=18:
      print(f"La persona de {age} años puede conducir")
    else:
      print(f"La persona de {age} años no puede conducir")
VerificateIfCanDriveWithBucle(ages)

"""## Booleanos"""

age =15
age>=18

auth=[]

auth.clear()
def VerificateIfCanDriveWithBucle(ages, auth):
  for age in ages:
    if age>=18:
      auth.append(True)
    else:
      auth.append(False)
VerificateIfCanDriveWithBucle(ages,auth)
auth

for person in auth:
  if person==True:
    print("Puede conducir")
  else:
    print("No puede conducir")

"""## Tipos en una lista"""

lista = ["Mauricio", 1, True, "18"]
for element in lista:
  print(f"El elemento {element} es del tipo: ", type(element))

"""## Import"""

from random import randrange, seed

seed(8)

randrange(0,11)

notas_mate=[]
for notas in range(randrange(0,8)):
  notas_mate.append(randrange(0,11))
notas_mate

len(notas_mate)

"""## Matplotlib"""

import matplotlib.pyplot as plt

x=list(range(1,9))
y=notas_mate
plt.plot(x,y, market='o')
plt.title("Notas Matemáticas")
plt.xlabel("Examenes")
plt.ylabel("Notas")
plt.Show()

"""#Dia 2"""

print('Brasil gano 5 titulos mundiales de futbol')

print('Brasil gano 5 titulos mundiales de futbol', sep='-')

print('Brasil', 'gano', 5, 'titulos', 'mundiales', 'de futbol', sep='-')

print('Brasil', 'gano', 5, 'titulos', 'mundiales', 'de futbol', end=' ')

paises = ['Argentina', 'Italia', 'Brasil']
titulos=[3, 2, 5]
for i, pais in enumerate(paises):
  print(f'{paises[i]} gano {titulos[i]} titulos')

"""##Juego Adivinanza"""

def verificar_Entero():
  isInt=False
  while isInt==False:
    variable=input("Ingrese el numero: ")
    if variable.isdigit():
      isInt=True
  variable=int(variable)
  return variable

def cercania_Numeros(num1, num2):
  diferencia=abs(num1-num2)
  if(diferencia<=10):
    print("Estas muy cerca!")
  elif(diferencia>10 and diferencia<30):
    print("Ni tan cerca, ni tan lejos, TU PUEDES!")
  else:
    print("Estas demasiado lejos del numero!")

def menu_Dificultad():
  print("\tSeleccione un nivel de dificultad \n\t(1)Facil | (2)Medio | (3)Dificil")
  dificultad=verificar_Entero()
  if(dificultad==1):
    return 20
  elif(dificultad==2):
    return 10
  else:
    return 5

"""##Juego Adivinanza"""

from random import randrange as rndrange
print("=================================================")
print("\t\tJuego Adivinanza")
print("=================================================")

numeroSecreto=round(rndrange(0,100))
print(numeroSecreto)
maxIntentos=menu_Dificultad()
puntaje=0
if(maxIntentos==20):
  puntaje=100
elif(maxIntentos==10):
  puntaje=1000
else:
  puntaje=1000000
for intento in range(1, maxIntentos+1,1):
    if(intento<maxIntentos):
      print("\t\tIntento #{} de {}".format(intento, maxIntentos))
      print(f"\t\t\t\tPuntaje: {puntaje}")
    else:
      print("\t\tIntento #{} de {}".format(intento, maxIntentos))
      print(f"Puntaje: {puntaje}")
      print("\t¡¡¡Atento! Estas en tu ultimo intento!!!")
    entrada=verificar_Entero()
    if(entrada<1 or entrada>100):
      print("¡¡¡Debe ingresar un numero entre 1 y 100!!!")
      puntaje=round(puntaje-(puntaje*0.2))
      continue
    print(f"<><> Verificando si {entrada} es el numero secreto <><>")

    if(entrada==numeroSecreto):
      if(intento>1):
        print(f"¡¡¡Felicidades! Adivinaste el numero con {intento} intentos!!!")
      else:
        print(f"¡¡¡Felicidades! Adivinaste el numero con {intento} solo intento!!!")
      acertado=True
      break
    elif(entrada<numeroSecreto):
      print("<><> El numero ingresado es menor que el secreto! <><>")
      cercania_Numeros(entrada, numeroSecreto)
      intento+=1
      puntaje=round(puntaje-(puntaje*0.2))
    else:
      print("<><> El numero es mayor que el secreto! <><>")
      cercania_Numeros(entrada, numeroSecreto)
      intento+=1
      puntaje=round(puntaje-(puntaje*0.2))
print("=================================================")
print("\t\tFin del Juego")
print("=================================================")

for i in range(20,1,-2):
  print(i)